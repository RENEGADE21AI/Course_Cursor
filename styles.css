// Variables for cash and upgrades
let cash = 0.00;
let cashPerClick = 0.50;
let cashPerSecond = 0.25;
let upgradeClickCost = 10.00;
let upgradeAutomaticCost = 10.00;

// Load saved values from local storage
function loadProgress() {
    cash = parseFloat(localStorage.getItem('cash')) || 0;
    cashPerClick = parseFloat(localStorage.getItem('cashPerClick')) || 0.50;
    cashPerSecond = parseFloat(localStorage.getItem('cashPerSecond')) || 0.25;
    upgradeClickCost = parseFloat(localStorage.getItem('upgradeClickCost')) || 10.00;
    upgradeAutomaticCost = parseFloat(localStorage.getItem('upgradeAutomaticCost')) || 10.00;
}

// Save values to local storage
function saveProgress() {
    localStorage.setItem('cash', cash);
    localStorage.setItem('cashPerClick', cashPerClick);
    localStorage.setItem('cashPerSecond', cashPerSecond);
    localStorage.setItem('upgradeClickCost', upgradeClickCost);
    localStorage.setItem('upgradeAutomaticCost', upgradeAutomaticCost);
}

// Update the cash display
function updateDisplay() {
    document.getElementById('scoreDisplay').innerText = `Cash: $${cash.toFixed(2)}`;
    document.getElementById('clickInfo').innerText = `Current Cash Per Click: $${cashPerClick.toFixed(2)}`;
    document.getElementById('automaticInfo').innerText = `Current Cash Per Second: $${cashPerSecond.toFixed(2)}`;
    document.getElementById('upgradeClickButton').innerText = `Buy More Cash Per Click (Cost: $${upgradeClickCost.toFixed(2)})`;
    document.getElementById('upgradeAutomaticButton').innerText = `Buy More Cash Per Second (Cost: $${upgradeAutomaticCost.toFixed(2)})`;
}

// Click cash function
document.getElementById('clickCash').addEventListener('click', () => {
    cash += cashPerClick;
    updateDisplay();
    saveProgress();
});

// Upgrade buttons
document.getElementById('upgradeClickButton').addEventListener('click', () => {
    if (cash >= upgradeClickCost) {
        cash -= upgradeClickCost;
        cashPerClick *= 1.10; // Increase by 10%
        upgradeClickCost = Math.round(upgradeClickCost * 1.15 * 100) / 100; // Increase cost by 15%
        updateDisplay();
        saveProgress();
    }
});

document.getElementById('upgradeAutomaticButton').addEventListener('click', () => {
    if (cash >= upgradeAutomaticCost) {
        cash -= upgradeAutomaticCost;
        cashPerSecond *= 1.10; // Increase by 10%
        upgradeAutomaticCost = Math.round(upgradeAutomaticCost * 1.15 * 100) / 100; // Increase cost by 15%
        updateDisplay();
        saveProgress();
    }
});

// Automatic cash increment
setInterval(() => {
    cash += cashPerSecond;
    updateDisplay();
    saveProgress();
}, 1000);

// Popups functionality
const overlay = document.getElementById('overlay');
const settingsPopup = document.getElementById('settingsPopup');
const statsPopup = document.getElementById('statsPopup');

// Open Settings Popup
document.getElementById('settingsButton').addEventListener('click', () => {
    overlay.style.display = 'block';
    settingsPopup.style.display = 'block';
});

// Close Settings Popup
document.getElementById('closeSettingsPopup').addEventListener('click', () => {
    overlay.style.display = 'none';
    settingsPopup.style.display = 'none';
    document.getElementById('loginRegisterContainer').style.display = 'none'; // Hide Login/Register container when closing
});

// Open Stats Popup
document.getElementById('statsButton').addEventListener('click', () => {
    overlay.style.display = 'block';
    statsPopup.style.display = 'block';
});

// Close Stats Popup
document.getElementById('closeStatsPopup').addEventListener('click', () => {
    overlay.style.display = 'none';
    statsPopup.style.display = 'none';
});

// Reset Progress button
document.getElementById('resetProgressButton').addEventListener('click', () => {
    cash = 0;
    cashPerClick = 0.50;
    cashPerSecond = 0.25;
    upgradeClickCost = 10.00;
    upgradeAutomaticCost = 10.00;
    saveProgress();
    updateDisplay();
});

// Toggle Login/Register
document.getElementById('loginRegisterButton').addEventListener('click', () => {
    const container = document.getElementById('loginRegisterContainer');
    container.style.display = (container.style.display === 'none' || container.style.display === '') ? 'block' : 'none';
});

// Tab switching for Login/Register
document.getElementById('loginTab').addEventListener('click', () => {
    document.getElementById('loginRegisterForm').style.display = 'block';
    document.getElementById('registerTab').classList.remove('active');
    document.getElementById('loginTab').classList.add('active');
});

document.getElementById('registerTab').addEventListener('click', () => {
    document.getElementById('loginRegisterForm').style.display = 'none';
    document.getElementById('loginTab').classList.remove('active');
    document.getElementById('registerTab').classList.add('active');
});

// Load progress on start
loadProgress();
updateDisplay();
